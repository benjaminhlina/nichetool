[{"path":[]},{"path":"https://benjaminhlina.github.io/nichetools/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"CC0 1.0 Universal","title":"CC0 1.0 Universal","text":"CREATIVE COMMONS CORPORATION LAW FIRM PROVIDE LEGAL SERVICES. DISTRIBUTION DOCUMENT CREATE ATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES INFORMATION “-” BASIS. CREATIVE COMMONS MAKES WARRANTIES REGARDING USE DOCUMENT INFORMATION WORKS PROVIDED HEREUNDER, DISCLAIMS LIABILITY DAMAGES RESULTING USE DOCUMENT INFORMATION WORKS PROVIDED HEREUNDER.","code":""},{"path":"https://benjaminhlina.github.io/nichetools/LICENSE.html","id":"statement-of-purpose","dir":"","previous_headings":"","what":"Statement of Purpose","title":"CC0 1.0 Universal","text":"laws jurisdictions throughout world automatically confer exclusive Copyright Related Rights (defined ) upon creator subsequent owner(s) (, “owner”) original work authorship /database (, “Work”). Certain owners wish permanently relinquish rights Work purpose contributing commons creative, cultural scientific works (“Commons”) public can reliably without fear later claims infringement build upon, modify, incorporate works, reuse redistribute freely possible form whatsoever purposes, including without limitation commercial purposes. owners may contribute Commons promote ideal free culture production creative, cultural scientific works, gain reputation greater distribution Work part use efforts others. /purposes motivations, without expectation additional consideration compensation, person associating CC0 Work (“Affirmer”), extent owner Copyright Related Rights Work, voluntarily elects apply CC0 Work publicly distribute Work terms, knowledge Copyright Related Rights Work meaning intended legal effect CC0 rights. Copyright Related Rights. Work made available CC0 may protected copyright related neighboring rights (“Copyright Related Rights”). Copyright Related Rights include, limited , following: right reproduce, adapt, distribute, perform, display, communicate, translate Work; moral rights retained original author(s) /performer(s); publicity privacy rights pertaining person’s image likeness depicted Work; rights protecting unfair competition regards Work, subject limitations paragraph 4(), ; rights protecting extraction, dissemination, use reuse data Work; database rights (arising Directive 96/9/EC European Parliament Council 11 March 1996 legal protection databases, national implementation thereof, including amended successor version directive); similar, equivalent corresponding rights throughout world based applicable law treaty, national implementations thereof. Waiver. greatest extent permitted , contravention , applicable law, Affirmer hereby overtly, fully, permanently, irrevocably unconditionally waives, abandons, surrenders Affirmer’s Copyright Related Rights associated claims causes action, whether now known unknown (including existing well future claims causes action), Work () territories worldwide, (ii) maximum duration provided applicable law treaty (including future time extensions), (iii) current future medium number copies, (iv) purpose whatsoever, including without limitation commercial, advertising promotional purposes (“Waiver”). Affirmer makes Waiver benefit member public large detriment Affirmer’s heirs successors, fully intending Waiver shall subject revocation, rescission, cancellation, termination, legal equitable action disrupt quiet enjoyment Work public contemplated Affirmer’s express Statement Purpose. Public License Fallback. part Waiver reason judged legally invalid ineffective applicable law, Waiver shall preserved maximum extent permitted taking account Affirmer’s express Statement Purpose. addition, extent Waiver judged Affirmer hereby grants affected person royalty-free, non transferable, non sublicensable, non exclusive, irrevocable unconditional license exercise Affirmer’s Copyright Related Rights Work () territories worldwide, (ii) maximum duration provided applicable law treaty (including future time extensions), (iii) current future medium number copies, (iv) purpose whatsoever, including without limitation commercial, advertising promotional purposes (“License”). License shall deemed effective date CC0 applied Affirmer Work. part License reason judged legally invalid ineffective applicable law, partial invalidity ineffectiveness shall invalidate remainder License, case Affirmer hereby affirms () exercise remaining Copyright Related Rights Work (ii) assert associated claims causes action respect Work, either case contrary Affirmer’s express Statement Purpose. Limitations Disclaimers. trademark patent rights held Affirmer waived, abandoned, surrendered, licensed otherwise affected document. Affirmer offers Work -makes representations warranties kind concerning Work, express, implied, statutory otherwise, including without limitation warranties title, merchantability, fitness particular purpose, non infringement, absence latent defects, accuracy, present absence errors, whether discoverable, greatest extent permissible applicable law. Affirmer disclaims responsibility clearing rights persons may apply Work use thereof, including without limitation person’s Copyright Related Rights Work. , Affirmer disclaims responsibility obtaining necessary consents, permissions rights required use Work. Affirmer understands acknowledges Creative Commons party document duty obligation respect CC0 use Work.","code":""},{"path":"https://benjaminhlina.github.io/nichetools/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Benjamin L. Hlina. Maintainer.","code":""},{"path":"https://benjaminhlina.github.io/nichetools/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"HLina BL (2024). nichetools: complementary package nicheROVER. R package version 0.1.0, https://benjaminhlina.github.io/nichetool/.","code":"@Manual{,   title = {nichetools: complementary package to {nicheROVER}},   author = {Benjamin L. HLina},   year = {2024},   note = {R package version 0.1.0},   url = {https://benjaminhlina.github.io/nichetool/}, }"},{"path":"https://benjaminhlina.github.io/nichetools/index.html","id":"nichetools","dir":"","previous_headings":"","what":"complementary package to {nicheROVER}","title":"complementary package to {nicheROVER}","text":"{nichetools} complementary package {nicheROVER} allows user extract Bayesian estimates data objects created {nicheROVER} (e.g., niche size similarities).","code":""},{"path":"https://benjaminhlina.github.io/nichetools/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"complementary package to {nicheROVER}","text":"can install development version nichetools using following:","code":"install.packages(\"devtools\") devtools::install_github(\"benjaminhlina/nichetools\")"},{"path":"https://benjaminhlina.github.io/nichetools/reference/mu_est_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimates of mu from Normal-Inverse-Wishart (NIW) prior — mu_est_long","title":"Estimates of mu from Normal-Inverse-Wishart (NIW) prior — mu_est_long","text":"Estimates mu Normal-Inverse-Wishart (NIW) priors example data frame nicheROVER example","code":""},{"path":"https://benjaminhlina.github.io/nichetools/reference/mu_est_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimates of mu from Normal-Inverse-Wishart (NIW) prior — mu_est_long","text":"","code":"mu_est_long"},{"path":"https://benjaminhlina.github.io/nichetools/reference/mu_est_long.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Estimates of mu from Normal-Inverse-Wishart (NIW) prior — mu_est_long","text":"data frame containing 8,0000 rows 7 variables metric name metric extracted niw.post() species species abbreviation sample_number sample number 1-1000 isotope column isotope name mu_est estimate mu produced niw.post() element isotopic element used labelling meutron neutron number used labelling","code":""},{"path":"https://benjaminhlina.github.io/nichetools/reference/mu_extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Mu extract — mu_extract","title":"Mu extract — mu_extract","text":"Extract estimates mu functions nicheROVER.","code":""},{"path":"https://benjaminhlina.github.io/nichetools/reference/mu_extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mu extract — mu_extract","text":"","code":"mu_extract(data)"},{"path":"https://benjaminhlina.github.io/nichetools/reference/niche_ellipse.html","id":null,"dir":"Reference","previous_headings":"","what":"Create ellipses based on Bayesian estimates — niche_ellipse","title":"Create ellipses based on Bayesian estimates — niche_ellipse","text":"function allows user supply Bayesian estimates mu sigma create estimated Bayesian ellipse niche region.","code":""},{"path":"https://benjaminhlina.github.io/nichetools/reference/niche_ellipse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create ellipses based on Bayesian estimates — niche_ellipse","text":"","code":"niche_ellipse(   dat_mu,   dat_sigma,   isotope_a = NULL,   isotope_b = NULL,   p_ell = NULL )"},{"path":"https://benjaminhlina.github.io/nichetools/reference/niche_ellipse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create ellipses based on Bayesian estimates — niche_ellipse","text":"dat_mu data frame containing mu Bayesian estimates. data frame needs long format mu estimate isotope stacked top . dat_sigma data frame containing sigma Bayesian estimates. data frame needs wide format sigma/covariance matrices stacked onto . isotope_a character string column name first isotope used dat_sigma. Defaults \"d15n\". isotope_b character string column name second isotope used dat_sigma. Defaults \"d13c\". p_ell confidence interval ellipse estimate. Default 0.95 (.e., 95% confidence interval).","code":""},{"path":"https://benjaminhlina.github.io/nichetools/reference/niche_ellipse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create ellipses based on Bayesian estimates — niche_ellipse","text":"","code":"# ellipse <- sigma_ellipse()"},{"path":"https://benjaminhlina.github.io/nichetools/reference/niw_fish_post.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimates of mu and sigma from Normal-Inverse-Wishart (NIW) prior — niw_fish_post","title":"Estimates of mu and sigma from Normal-Inverse-Wishart (NIW) prior — niw_fish_post","text":"Estimates sigma Normal-Inverse-Wishart (NIW) priors example data frame produced using niw.post() nicheROVER","code":""},{"path":"https://benjaminhlina.github.io/nichetools/reference/niw_fish_post.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimates of mu and sigma from Normal-Inverse-Wishart (NIW) prior — niw_fish_post","text":"","code":"niw_fish_post"},{"path":"https://benjaminhlina.github.io/nichetools/reference/niw_fish_post.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Estimates of mu and sigma from Normal-Inverse-Wishart (NIW) prior — niw_fish_post","text":"list elements mu Sigma sizes c(nsamples, length(lambda)) c(dim(Psi),","code":""},{"path":"https://benjaminhlina.github.io/nichetools/reference/sigma_est_wide.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimates of sigma from Normal-Inverse-Wishart (NIW) prior — sigma_est_wide","title":"Estimates of sigma from Normal-Inverse-Wishart (NIW) prior — sigma_est_wide","text":"Estimates sigma Normal-Inverse-Wishart (NIW) priors example data frame nicheROVER example","code":""},{"path":"https://benjaminhlina.github.io/nichetools/reference/sigma_est_wide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimates of sigma from Normal-Inverse-Wishart (NIW) prior — sigma_est_wide","text":"","code":"sigma_est_wide"},{"path":"https://benjaminhlina.github.io/nichetools/reference/sigma_est_wide.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Estimates of sigma from Normal-Inverse-Wishart (NIW) prior — sigma_est_wide","text":"data frame containing 8,0000 rows 7 variables metric name metric extracted niw.post() species species abbreviation isotope column isotope name sample_number sample number 1-1000 d15n estimate sigma d15n produced niw.post() d13c estimate sigma d13c produced niw.post()","code":""},{"path":"https://benjaminhlina.github.io/nichetools/reference/sigma_extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Sigma extract — sigma_extract","title":"Sigma extract — sigma_extract","text":"Extract Bayesian estimates sigma function niw.post() nicheROVER.","code":""},{"path":"https://benjaminhlina.github.io/nichetools/reference/sigma_extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sigma extract — sigma_extract","text":"","code":"sigma_extract(data, isotope_a = NULL, isotope_b = NULL)"},{"path":"https://benjaminhlina.github.io/nichetools/reference/sigma_extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sigma extract — sigma_extract","text":"data list object created niw.post() nicheROVER isotope_a character string supply first isotope used niw.post(). Defaults \"d15n\". isotope_b character string supply first isotope used niw.post(). Defaults \"d13c\".","code":""},{"path":"https://benjaminhlina.github.io/nichetools/reference/sigma_extract.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sigma extract — sigma_extract","text":"","code":"df_sigma_test <- sigma_extract( data = niw_fish_post )"}]
